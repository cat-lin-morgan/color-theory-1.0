{"version":3,"sources":["utils/auth.js","components/Nav/index.js","components/Footer/index.js","utils/queries.js","utils/dateFormat.js","components/Colors/index.js","utils/mutations.js","components/SocialButtons/index.js","components/Palette/index.js","pages/Home.js","components/AuthWrapper/index.js","pages/Signup.js","pages/Login.js","components/CreateParts/CreateProvider.js","components/CreateParts/AddTags/index.js","components/CreateParts/ColorPicker/index.js","components/CreateParts/PaletteDescription/index.js","components/CreateParts/CreateButton/index.js","pages/Create.js","components/SearchBar/index.js","pages/SearchGallery.js","pages/Details.js","App.js","serviceWorker.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Nav","to","Auth","loggedIn","onClick","logout","flavorText","Footer","randomFlavor","Math","round","random","length","href","target","rel","QUERY_PALETTES","gql","dateFormat","milliseconds","stringToInt","parseInt","toDateString","Colors","palette","className","style","backgroundColor","primary","flexGrow","secondary","accent1","accent2","accent3","LOGIN_USER","ADD_USER","ADD_PALETTE","ADD_UPVOTE","ADD_FAV_PALETTE","SocialButtons","upvoteCount","saveCount","paletteId","useMutation","addUpvote","useState","upvote","setUpvote","addFavPalette","favorite","setFavorite","a","console","log","variables","data","upvotes","error","saves","upvoteClick","saveClick","Palette","palettes","map","title","username","createdAt","_id","description","Home","useQuery","loading","name","value","AuthWrapper","children","border","Signup","email","password","formState","setFormState","addUser","handleFormSubmit","event","preventDefault","mutationResponse","login","handleChange","onSubmit","htmlFor","type","onChange","Login","tags","current","workingColor","contextState","state","handleSubmit","paletteCreatorContext","createContext","CreateProvider","addPalette","setLoading","setState","Provider","property","AddTags","newTag","setNewTag","useContext","handleAddTag","trim","handleRemoveTag","tag","updatedTags","filter","t","e","onKeyPress","key","maxLength","i","ColorPicker","generateHandler","activeSelection","disableAlpha","width","color","hex","PaletteDescription","handleInputChange","CreateButton","disabled","Create","SearchBar","SearchGallery","Details","client","ApolloClient","request","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.49d16ce7.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken);\n\n        window.location.assign('/');\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n        // this will reload the page and reset the state of the application\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();","import React from 'react';\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n\n    function showNavigation() {\n        if (Auth.loggedIn()) {\n            return(\n                <ul>\n                    <li>\n                        {/* <Link to=''>User Page</Link> */}\n                    </li>\n                    <li>\n                        <Link to='/search'>Search</Link>\n                    </li>\n                    <li><Link to='/create'>Create a Palette</Link></li>\n                    <li>\n                        <Link to='/' onClick={() => Auth.logout()}>Logout</Link>\n                    </li>\n                </ul>\n            )\n        } else {\n            return (\n                <ul>\n                    <li>\n                        <Link to='/login'>Login</Link>\n                    </li>\n                    <li>\n                        <Link to='/signup'>Signup</Link>\n                    </li>\n                </ul>\n            )\n        }\n    }\n\n    return (\n        <header>\n            <h1>\n                <Link to='/'>Color Theory</Link>\n            </h1>\n\n            <nav>\n                {showNavigation()}\n            </nav>\n        </header>\n    )\n}\n\nexport default Nav;","import React from 'react';\n\nconst flavorText = [\n    \"You’ll hue the day!\",\n    \"Now You're Thinking With Colors\",\n    \"You hue me for a loop.\",\n    \"Pantone deaf\",\n    \"I am only hue man.\",\n    \"Colors laugh by saying, 'Hue Hue Hue.'\",\n    \"Color me impressed.\",\n];\n\nconst Footer = () => {\n\n    const randomFlavor = flavorText[Math.round(Math.random() * flavorText.length)]\n\n    return(\n        <footer>\n            <h2>{randomFlavor}</h2>\n            <ul>\n                <li>\n                    <a href='#'>About The Creators</a>\n                </li>\n                <li>\n                <a href='https://github.com/reynolkb/color-theory-1.0' target='_blank' rel='noreferrer'>Github Repo</a>\n                </li>\n                <li>\n                    <a href='mailto:colortheory@gmail.com'>Contact Us</a>\n                </li>\n            </ul>\n        </footer>\n    )\n}\n\nexport default Footer;","import gql from 'graphql-tag';\n\nexport const QUERY_PALETTES = gql`\n\tquery palettes($username: String) {\n\t\tpalettes(username: $username) {\n\t\t\t_id\n\t\t\ttitle\n            description\n            primary\n            secondary\n            accent1\n            accent2\n\t\t\taccent3\n\t\t\tusername\n\t\t\tupvoteCount\n\t\t\ttags {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t}\n\t\t\tupvotes {\n\t\t\t\tusername\n\t\t\t}\n\t\t\tcreatedAt\n\t\t\tsaveCount\n\t\t\tsaves {\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_PALETTE = gql`\n\tquery palette($id: ID!) {\n\t\tpalette(_id: $id) {\n\t\t\t_id\n\t\t\ttitle\n            description\n            primary\n            secondary\n            accent1\n            accent2\n\t\t\taccent3\n\t\t\tusername\n\t\t\tupvoteCount\n\t\t\ttags {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t}\n\t\t\tupvotes {\n\t\t\t\tusername\n\t\t\t}\n\t\t\tcreatedAt\n\t\t\tsaveCount\n\t\t\tsaves {\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_USER = gql`\n\tquery user($username: String!) {\n\t\tuser(username: $username) {\n\t\t\t_id\n\t\t\tusername\n\t\t\temail\n\t\t\tmyPalettes {\n                _id\n\t\t\t}\n\t\t\tfavorites {\n                _id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_ME = gql`\n\t{\n\t\tme {\n\t\t\t_id\n\t\t\tusername\n\t\t\temail\n\t\t\tmyPalettes {\n                _id\n\t\t\t}\n\t\t\tfavorites {\n                _id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_TAG = gql`\n\tquery tag($name: String!) {\n\t\ttag(name: $name) {\n\t\t\t_id\n\t\t\tname\n\t\t\ttaggedPalettes{\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;","export function dateFormat(milliseconds) {\n\n    const stringToInt = parseInt(milliseconds);\n    // console.log(\"number of milliseconds: \" + stringToInt);\n    // console.log(typeof stringToInt);\n\n    const date = new Date(stringToInt);\n    // console.log(date);\n\n    return date.toDateString();\n\n}\n\nexport function convertToInt(milliseconds) {\n\n    const stringToInt = parseInt(milliseconds);\n\n    const date = new Date(stringToInt);\n\n    return date;\n\n}","import React from 'react';\n\n// import { Link } from 'react-router-dom';\n\nconst Colors = ({ palette }) => {\n\n    return (\n        <div className='color-wrapper'>\n            {/* <Link to={`/palette/${palette._id}`}> */}\n                <div className='color-wrapper-aspect-ratio'>\n                    <div style={{ backgroundColor: palette.primary, flexGrow: '2.5' }}></div>\n                    <div style={{ backgroundColor: palette.secondary, flexGrow: '2' }}></div>\n                    <div style={{ backgroundColor: palette.accent1 }}></div>\n                    <div style={{ backgroundColor: palette.accent2 }}></div>\n                    <div style={{ backgroundColor: palette.accent3 }}></div>\n                </div>\n            {/* </Link> */}\n        </div>\n    )\n};\n\nexport default Colors;","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\n\tmutation login($username: String!, $password: String!) {\n\t\tlogin(username: $username, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_USER = gql`\n\tmutation addUser(\n\t\t$username: String!\n\t\t$email: String!\n\t\t$password: String!\n\t) {\n\t\taddUser(\n\t\t\tusername: $username\n\t\t\temail: $email\n\t\t\tpassword: $password\n\t\t) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t\tusername\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_PALETTE = gql`\n\tmutation addPalette(\n        $title: String!\n        $description: String!\n        $primary: String!\n        $secondary: String!\n        $accent1: String!\n        $accent2: String!\n        $accent3: String!\n        ) {\n            addPalette(\n                title: $title\n                description: $description\n                primary: $primary\n                secondary: $secondary\n                accent1: $accent1\n                accent2: $accent2\n                accent3: $accent3\n            ) {\n                _id\n                title\n                description\n                primary\n                secondary\n                accent1\n                accent2\n                accent3\n\t\t}\n\t}\n`;\n\nexport const REMOVE_PALETTE = gql`\n\tmutation removePalette($_id: ID!) {\n\t\tremovePalette(_id: $_id) {\n\t\t\t_id\n\t\t\tusername\n\t\t\tmyPalettes {\n                _id\n            }\n\t\t}\n\t}\n`;\n\nexport const ADD_UPVOTE = gql`\n\tmutation addUpvote($paletteId: ID!) {\n\t\taddUpvote(paletteId: $paletteId) {\n\t\t\t\t_id\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tprimary\n\t\t\t\tsecondary\n\t\t\t\taccent1\n\t\t\t\taccent2\n\t\t\t\taccent3\n\t\t\t\tupvotes {\n\t\t\t\t\t_id\n\t\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_FAV_PALETTE = gql`\n\tmutation addFavPalette($paletteId: ID!) {\n\t\taddFavPalette(paletteId: $paletteId) {\n\t\t\t\t_id\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tprimary\n\t\t\t\tsecondary\n\t\t\t\taccent1\n\t\t\t\taccent2\n\t\t\t\taccent3\n\t\t\t\tupvotes {\n\t\t\t\t\t_id\n\t\t\t\t}\n\t\t\t\tsaves {\n\t\t\t\t\t_id\n\t\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const CREATE_TAG =gql `\n\tmutation createTag($name: String!) {\n\t\tcreateTag(name: $name) {\n\t\t\t_id\n\t\t\tname\n\t\t\ttaggedPalettes{\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const LINK_TAG_TO_PALETTE = gql `\n\tmutation linkTagToPalette($paletteId: ID! $tagId: ID!) {\n\t\tlinkTagToPalette(paletteId: $paletteId tagId: $tagId) {\n\t\t\t_id\n\t\t\tname\n\t\t\ttaggedPalettes {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React, {useState} from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_UPVOTE, ADD_FAV_PALETTE } from '../../utils/mutations';\n\nconst SocialButtons = ({ upvoteCount, saveCount, paletteId}) => {\n    const [addUpvote] = useMutation(ADD_UPVOTE);\n    const [upvote, setUpvote] = useState(upvoteCount);\n\n    const [addFavPalette] = useMutation(ADD_FAV_PALETTE);\n    const [favorite, setFavorite] = useState(saveCount);\n\n    async function upvoteClick(paletteId) {\n        console.log(paletteId);\n        try {\n            const {data} = await addUpvote({\n                variables: {paletteId}\n            });\n            console.log(data);\n            setUpvote(data.addUpvote.upvotes.length);\n        } catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n    };\n\n    async function saveClick(paletteId) {\n        console.log(paletteId);\n        try {\n            const {data} = await addFavPalette({\n                variables: {paletteId}\n            });\n            console.log(data);\n            setFavorite(data.addFavPalette.saves.length);\n        } catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n    };\n\n    return(\n        <div className='likes-shares'>\n        <div>\n            <i className=\"fas fa-heart\" onClick={() =>\n                upvoteClick(paletteId)\n            }></i>{upvote}\n            <i className=\"far fa-bookmark\" onClick={() => {\n                saveClick(paletteId)\n            }}></i>{favorite} \n        </div>\n        <div>\n        <a href=\"http://www.facebook.com/sharer.php?u=https://color-theory.herokuapp.com/\"\n            target=\"_blank\"><i className=\"fas fa-share-square\"></i></a> Share\n        </div>\n    </div>\n    )\n}\n\nexport default SocialButtons;","//libraries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { dateFormat }  from '../../utils/dateFormat';\n\n//components\nimport Colors from '../../components/Colors';\nimport { palette } from '../../const/colors';\nimport SocialButtons from '../SocialButtons';\n\nconst Palette = ({ palettes }) => {\n    console.log(palettes);\n    // console.log(palettes[21].tags[0].name);\n\n    return (\n        // will need link to by react to link to details page \n        <div>\n            {palettes &&\n                palettes.map(palette => (\n                    <div key={palette._id}>\n                        <div className='palette-wrapper'>\n                                <h3 className='palette-title'>{palette.title}</h3>\n                                <p>by {palette.username} on {dateFormat(palette.createdAt)}</p>\n                                <div>\n                                    {/* to palette details page */}\n                                    <Link to={`/details/${palette._id}`}>\n                                        <Colors palette={palette} />\n                                    </Link>\n                                </div>\n                                <SocialButtons upvoteCount={palette.upvoteCount} saveCount={palette.saveCount} />\n                                <div>\n                                    <h5 className='palette-description'>Description:</h5>\n                                    <p>\n                                        {palette.description}\n                                    </p>\n                                </div>\n                            {/* </Link> */}\n                        </div>\n                    </div>\n                ))\n            }\n\n        </div>\n    )\n}\n\nexport default Palette;","import React, {useState} from 'react';\n\n// import functionality to make requests to GraphQL server \nimport { useQuery } from '@apollo/react-hooks';\n\n// import queries \n// import { QUERY_FILTERED_PALETTES } from '../utils/queries';\nimport { QUERY_PALETTES } from '../utils/queries';\n\nimport Palette from '../components/Palette';\nimport Sidebar from '../components/Sidebar';\n\nconst Home = () => {\n\n    // load the Home component & execute the query for the Palette data\n    // data returned from the server stored in the destructured data property\n    // query for main content\n    // const { loading, data } = useQuery(QUERY_FILTERED_PALETTES);\n    const { loading, data } = useQuery(QUERY_PALETTES);\n\n    // get Palette data out of the query's response with optional chaining\n    // if data exists, store it in the palette constant we just created\n    // if data is undefined, save empty array \n    // constant for main content\n    const palettes = data?.palettes || [];\n    // const palettes = fakePalettes;\n\n    palettes.length && console.log(typeof palettes[0]._id);\n\n    return (\n            <div className='global-wrapper'>\n                <div className='home-palette-wrapper'>\n                    <div className='filter-selection'>\n                        <form>\n                            <select className='filter' name='filter'>\n                                <option value=''>Filter ↓</option>\n                                <option value='most-liked'>Most Liked</option>\n                                <option value='recent'>Recent</option>\n                            </select>\n                        </form>\n                    </div>\n                    {/* cat's styling palettes */}\n                    {/* {\n                        fakePalettes.map((palette, i) => (\n                            <Palette key={i} palette={palette} />\n                        ))\n                    } */}\n\n                    {loading ? (\n                        <div>Loading...</div>\n                    ) : (\n                            /* // Once query is complete and loading is undefined, pass palettes array to <Palette> component as props */\n                            <Palette palettes={palettes}/>\n                        )}\n                </div>\n                {/* <div className='sidebar-wrapper'>\n                    {loading ? (\n                        <div>Loading...</div>\n                    ) : (\n                        <Sidebar palettes={palettes} />\n                    )}\n                </div> */}\n            </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\n// this doesn't need any information from the db\nconst AuthWrapper = ({children, className}) => {\n\n    const border = `${className} auth-panel`\n\n    return(\n        <div className='auth-wrapper'>\n            <div className={border}>\n            {/* this is the div with background color  */}\n                <div className='auth-panel-contents'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n};\n\n\nexport default AuthWrapper;","import React, {useState} from 'react';\nimport AuthWrapper from '../components/AuthWrapper';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n    const [formState, setFormState] = useState({ username: '', email: '', password: '' });\n    const [addUser, { error }] = useMutation(ADD_USER);\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        const mutationResponse = await addUser({\n        variables: {\n            username: formState.username, email: formState.email, password: formState.password\n        }\n        });\n        const token = mutationResponse.data.addUser.token;\n        Auth.login(token);\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setFormState({\n        ...formState,\n        [name]: value\n        });\n    };\n\n    return(\n            <AuthWrapper className='pattern-diagonal-stripes-right'>\n                <h3 className='auth-title'>Signup</h3>\n                    <div>\n                        <form onSubmit={handleFormSubmit}>\n                            <div className='auth-element'>\n                                <label htmlFor='username'>Username:</label>\n                                <input type='text' name='username' onChange={handleChange}/>\n                            </div>\n                            <div className='auth-element'>\n                                <label htmlFor='email'>Email:</label>\n                                <input type='email' name='email' onChange={handleChange}/>\n                            </div>\n                            <div className='auth-element'>\n                                <label htmlFor='password'>Password:</label>\n                                <input type='password' name='password' onChange={handleChange}/>\n                            </div>\n                            {error ? \n                                <div>\n                                    <p className=\"error-text\" >The provided credentials are incorrect</p>\n                                </div> : null\n                            }\n                            <button className='btn blue-btn' type=\"submit\">Signup</button>\n                        </form>\n                    </div>\n            </AuthWrapper>\n    )\n};\n\nexport default Signup;","import React, { useState } from 'react';\nimport AuthWrapper from '../components/AuthWrapper';\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst Login = () => {\n    const [formState, setFormState] = useState({ username: '', password: '' })\n    const [login, { error }] = useMutation(LOGIN_USER);\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        try {\n        const mutationResponse = await login({ variables: { username: formState.username, password: formState.password } })\n        const token = mutationResponse.data.login.token;\n        Auth.login(token);\n        } catch (e) {\n        console.log(e)\n        }\n    };\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setFormState({\n        ...formState,\n        [name]: value\n        });\n    };\n\n\n    return(\n            <AuthWrapper className='pattern-diagonal-stripes-left'>\n                <h3 className='auth-title'>Login</h3>\n                    <div>\n                        <form onSubmit={handleFormSubmit}>\n                            <div  className='auth-element'>\n                                <label htmlFor='username'>Username:</label>\n                                <input type='username' name='username' onChange={handleChange} />\n                            </div>\n                            <div  className='auth-element'>\n                                <label htmlFor='password'>Password:</label>\n                                <input type='password' name='password' onChange={handleChange}/>\n                            </div>\n                            {error ? \n                                <div>\n                                    <p className=\"error-text\" >The provided credentials are incorrect</p>\n                                </div> : null\n                            }\n                            <button className='btn pink-btn' type=\"submit\">Login</button>\n                        </form>\n                    </div>\n            </AuthWrapper>\n    )\n};\n\nexport default Login;","import React, { useState, createContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\n\n//utility\nimport { ADD_PALETTE } from '../../utils/mutations';\n\n//initial state for all forms\nconst formState = {\n    title: '',\n    description: '',\n    primary: '#f6f6f6',\n    secondary: '#f1f1f1',\n    accent1: '#f6f6f6',\n    accent2: '#f1f1f1',\n    accent3: '#f6f6f6',\n    tags: [],\n    current: '#f6f6f6',\n    workingColor: 'primary'\n};\n\n//these are our intial state for provider\nconst contextState = {\n    state: formState,\n    handleChange: () => {},\n    handleSubmit: () => {},\n    error: null,\n    loading: false\n}\n\n\nexport const paletteCreatorContext = createContext(contextState);\n\nconst CreateProvider = ({ children }) => {\n\n    const [ addPalette, { error }] = useMutation(ADD_PALETTE);\n    const [ loading, setLoading ] = useState(false);\n    const [ state, setState ] = useState(formState);\n\n    const handleChange = (property) => {\n        setState({...state, ...property})\n    }\n\n    const handleSubmit =  async () => {\n        setLoading(true);\n        //this is where we do our api call\n        const palette = {\n            title: state.title,\n            description: state.description,\n            primary: state.primary,\n            secondary: state.secondary,\n            accent1: state.accent1,\n            accent2: state.accent2,\n            accent3: state.accent3,\n            tags: state.tags,\n        };\n        // console.log(palette);\n        try {\n            // console.log(mutationResponse);\n            const mutationResponse = await addPalette({\n                variables: palette,\n            })\n            if (mutationResponse.data.addPalette) {\n                window.location.assign('/');\n            } else {\n                setLoading(false);\n            }\n        } catch (e) {\n            console.log(e);\n            setLoading(false);\n        }\n    }\n\n    return (\n        <paletteCreatorContext.Provider value={{ state, handleChange, handleSubmit, error, loading }}>\n            { children }\n        </paletteCreatorContext.Provider>\n    )\n}\n\nexport default CreateProvider;","import React, { useState, useContext } from 'react';\nimport { paletteCreatorContext } from '../CreateProvider';\n\nconst AddTags = () => {\n    \n    const [ newTag, setNewTag ] = useState('');\n    const { state, handleChange } = useContext(paletteCreatorContext);\n\n    const handleTag = (e) => {\n        setNewTag(e.target.value);\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleAddTag();\n        }\n    }\n\n    const handleAddTag = () => {\n        const cleanTag = newTag.trim()\n        if(cleanTag === '') {\n            return;\n        }\n        handleChange({\n            tags: [...state.tags, newTag],\n        })\n        setNewTag('');\n    }\n\n    const handleRemoveTag = (tag) => () => {\n        const updatedTags = state.tags.filter(t => t !== tag);\n        handleChange({\n            tags: updatedTags\n        });\n    }\n\n    return(\n        <div className='add-tags-component'>\n            <form>\n                <div>\n                    <label htmlFor='tags'>Add Tag</label>\n                    <input \n                        name='tags'\n                        value={newTag}\n                        onChange={handleTag}\n                        onKeyPress={handleKeyPress}\n                        maxLength='10'\n                    />\n                </div>\n                <button\n                    type='button'\n                    className='btn'\n                    onClick={handleAddTag}\n                >\n                    Add\n                </button>\n            </form>\n            {/* pill rough draft */}\n            <div className='added-tags'>\n                <h4>Tags</h4>\n                {\n                    state.tags.map((tag, i) => (\n                        <div key={`${tag}${i}`} className='tag-pill'>\n                            <p>{tag}</p>\n                            <button \n                                type='button'\n                                className='tag-pill-delete'\n                                onClick={handleRemoveTag(tag)}>×</button>\n                        </div>\n                    ))\n                }\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default AddTags;","//libraries\nimport React, { useContext } from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport { paletteCreatorContext } from '../CreateProvider';\n\nconst ColorPicker = () => {\n\n    const { state, handleChange } = useContext(paletteCreatorContext);\n\n    function handleColorPicker(color) {\n        handleChange({ \n            current: color.hex,\n            workingColor: state.workingColor,\n            [state.workingColor]: color.hex\n        });\n    }\n\n    // this is a helper function to help dry our code\n    function generateHandler(key) {\n        return () => {\n            handleChange({\n                workingColor: key,\n                current: state[key]\n            });\n        }\n    }\n\n    function activeSelection(key) {\n        return key === state.workingColor ? 'active-color' : '';\n    }\n\n    return(\n        <div className='create-palette-wrapper'>\n            <SketchPicker \n                disableAlpha={true}\n                width={ 250 }\n                color={ state.current }\n                onChange={ handleColorPicker }\n            />\n            <p>Select each box to add color to it.</p>\n            <div className='color-wrapper create-color-div-wrapper'>\n                <div className='color-wrapper-aspect-ratio'>\n                    <div\n                        className={activeSelection('primary')}\n                        onClick={ generateHandler('primary') } \n                        style={{ backgroundColor: state.primary, flexGrow: '2.5' }}\n                    />\n                    <div\n                        className={activeSelection('secondary')}\n                        onClick={ generateHandler('secondary') } \n                        style={{ backgroundColor: state.secondary, flexGrow: '2' }}\n                    />\n                    <div\n                        className={activeSelection('accent1')}\n                        onClick={ generateHandler('accent1') } \n                        style={{ backgroundColor: state.accent1 }}\n                    />\n                    <div\n                        className={activeSelection('accent2')}\n                        onClick={ generateHandler('accent2') } \n                        style={{ backgroundColor: state.accent2 }}\n                    />\n                    <div\n                        className={activeSelection('accent3')}\n                        onClick={ generateHandler('accent3') } \n                        style={{ backgroundColor: state.accent3 }}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","import React, { useContext } from 'react';\nimport { paletteCreatorContext } from '../CreateProvider';\n\nconst PaletteDescription = () => {\n\n    const { state, handleChange } = useContext(paletteCreatorContext);\n\n    const handleInputChange = (e) => {\n        e.preventDefault();\n        const key = e.target.name;\n        const value = e.target.value;\n        handleChange({ [key]: value })\n    }\n\n    return(\n        <div className='create-description-component'>\n            <form>\n                <div>\n                    <label htmlFor='title'>Name of Palette:</label>\n                    <input \n                        onChange={handleInputChange}\n                        value={state.title}\n                        name='title'\n                    />\n                </div>\n                <div>\n                    <label htmlFor='description'>Description:</label>\n                    <textarea \n                        onChange={handleInputChange}\n                        value={state.description}\n                        name='description'\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PaletteDescription;","import React, { useContext } from 'react';\n\nimport { paletteCreatorContext } from '../CreateProvider';\n\n\nconst CreateButton = () => {\n    const { handleSubmit, loading, error } = useContext(paletteCreatorContext);\n    return (\n        <div className='error-header'>\n            { error ? <p className='error-text'>Must complete all fields.</p> : null }\n            <button \n                className='btn'\n                onClick={handleSubmit}\n                disabled={loading}\n            >\n                { loading ? 'Loading' : 'Create' }\n            </button>\n        </div>\n    )\n}\n\nexport default CreateButton;\n\n","import React from 'react';\n//context\nimport CreateProvider from '../components/CreateParts/CreateProvider';\n\n//components\nimport AddTags from '../components/CreateParts/AddTags';\nimport ColorPicker from '../components/CreateParts/ColorPicker';\nimport PaletteDescription from '../components/CreateParts/PaletteDescription';\nimport CreateButton from '../components/CreateParts/CreateButton';\n\nconst Create = () => {\n\n    return(\n        <CreateProvider>\n            <div className='create-pg-wrapper global-wrapper'>\n                <div className='create-palette-header'>\n                    <h3 className='page-title'>Create a Palette</h3>\n                    <CreateButton />\n                </div>\n                <div className='create-wrapper'>\n                    {/* left side */}\n                    <div className='create-form-wrapper'>\n                        <PaletteDescription />\n                        <AddTags />\n                    </div>\n                    {/* right side */}\n                    <ColorPicker />\n                </div>\n            </div>\n        </CreateProvider>\n    )\n};\n\nexport default Create;","import React from 'react';\n\nconst SearchBar = () => {\n    \n    return(\n        <div>\n            This will be the search bar.\n        </div>\n    )\n}\n\nexport default SearchBar;\n","//libraries\nimport React from 'react';\n\n//components\nimport SearchBar from '../components/SearchBar';\n\nconst SearchGallery = () => {\n    return(\n        <div className='global-wrapper'>\n            <SearchBar />\n            Here is the gallery.\n        </div>\n    )\n}\n\nexport default SearchGallery;","import React from 'react';\n\nconst Details = () => {\n    return(\n        <div className='global-wrapper'>\n            Here are some details.\n        </div>\n    )\n}\n\nexport default Details;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import apollo libraries for using React Hooks functionality with Apollo queries and mutations\nimport { ApolloProvider } from '@apollo/react-hooks';\n// functionality to make requests to the server with helper libraries\nimport ApolloClient from 'apollo-boost';\n\n//components\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\n//pages\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Create from './pages/Create';\nimport SearchGallery from './pages/SearchGallery';\nimport Details from './pages/Details';\n\n// establish the connection to the back-end server's /graphql endpoint using apollo\nconst client = new ApolloClient({\n  request: operation => {\n\n    const token = localStorage.getItem('id_token');\n\n    // set the HTTP request headers to include the JWT token\n\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n\n  },\n  // /graphql endpoint\n  // server path defined as \"proxy\" in package.json \n  uri: '/graphql'\n\n});\n\n\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Nav />\n        <main>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/signup' component={Signup} />\n            <Route exact path='/create' component={Create} />\n            <Route exact path='/search' component={SearchGallery} />\n            <Route exact path='/details' component={Details} />\n          </Switch>\n        </main>\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (\n        process.env.NODE_ENV === 'production' &&\n        'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nserviceWorker.register();"],"sourceRoot":""}